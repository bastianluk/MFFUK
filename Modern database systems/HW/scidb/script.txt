-- bastianl - theme - hotel

-- Called just once
set lang AQL;

-- DEBUG
--DROP ARRAY customers;
--DROP ARRAY reservations;
--DROP ARRAY americanCustomers;

-- Create AND Load (2)
-- Might have to edit path to data files when run on different machine.
CREATE ARRAY customers <customer:string, firstName:string, lastName:string, year:int16, email:string, country:string> [i=0:*];
LOAD customers FROM '/home/scidb/Documents/data1.scidb';
CREATE ARRAY reservations <reservation:int32, customer:string, room:string, state:string, start:datetime, end:datetime, price:int32> [j=0:*];
LOAD reservations FROM '/home/scidb/Documents/data2.scidb';

-- Update (3)
-- New reservation but without an assigned customer - e.g. a company reserved a room for someone on a business trip.
INSERT INTO reservations '[ (), (), (), (), (), ( 6, "", "d201", "confirmed",  "2021-05-15", "2021-05-23", 225) ]';
-- Keep american customers separately.
SELECT * INTO americanCustomers FROM customers WHERE customers.country = 'USA';
-- Mass discount on pricier reservations.
UPDATE reservations SET price = price - 50 WHERE price > 300;

-- Select (4)
-- Upcoming reservation report - customer name, the start of their reservation and assigned room.
SELECT c.firstName, c.lastName, r.start, r.room FROM customers AS c JOIN reservations AS r ON c.customer = r.customer WHERE r.start >= now() ORDER BY r.start;
-- Find possible assignments of reservation without a customer - someone lost track of who ordered it and now it needs to be assigned.
SELECT * FROM cross_join(customers, (SELECT * FROM reservations WHERE customer = ''));
-- Find first 3 reservations.
SELECT * FROM between(reservations, 0, 2);
-- For customers from the US, there are special taxes if you give them a room - get customers from the US, their reservations and sum the money you have to tax.
SELECT sum(r.price) AS profitToTax FROM reservations AS r JOIN americanCustomers AS ac on r.customer = ac.customer;


-- Delete
DROP ARRAY americanCustomers;
DROP ARRAY customers;
DROP ARRAY reservations;